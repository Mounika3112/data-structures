#include<stdio.h>
#include<stdlib.h>
typedef struct polynomialterm
{
    int coeff,expo;
    struct polynomialterm *next;
}pt;
pt *createlist(int n)
{
    pt* newn=NULL,*head,*l=NULL;
    int i,coeff,expo;
    for(i=0;i<n;i++)
    {
     newn=(pt*)malloc(sizeof(pt));
     printf("enter coefficient:");
     scanf("%d",&coeff);
     printf("enter exponent:");
     scanf("%d",&expo);
     newn->coeff=coeff;
     newn->expo=expo;
     if(i==0)
     {
        head=newn;
     }
     else
     {
        l->next=newn; 
     }
     l=newn;
    }
    return head;
}
void swap(pt* a,pt* b)
{
    int t1,t2;
    t1=a->coeff;
    t2=a->expo;
    a->coeff=b->coeff;
    b->coeff=t1;
    a->expo=b->expo;
    b->expo=t2;
}
pt* sortlist(pt* head)
{
    int i,j,n;
    pt* t=head;
    printf("enter n:");
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        t=head;
        for(j=0;j<n-i-1;j++)
        {
            if(t->expo<t->next->expo)
            {
            swap(t,t->next);
            }
            t=t->next;
        }
    }
    return head;
}
void display(pt* head)
{
    pt* t=head;
    if(head==NULL)
        return;
    else
    {
        while(t!=NULL)
        {
            printf("%dx^%d+",t->coeff,t->expo);
            t=t->next;
        }
    }
}
void main()
{
    int n;
    pt *h=NULL,*h1=NULL;
    printf("enter size-n:");
    scanf("%d",&n);
    h=createlist(n);
    h1=sortlist(h);
    display(h1);
}
